<?php
/**
 * TemplateKind
 *
 * PHP version 5
 *
 * @category Class
 * @package  InfluxDB2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * InfluxDB OSS API Service
 *
 * The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.
 *
 * OpenAPI spec version: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace InfluxDB2\Model;
use \InfluxDB2\ObjectSerializer;

/**
 * TemplateKind Class Doc Comment
 *
 * @category Class
 * @package  InfluxDB2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class TemplateKind
{
    /**
     * Possible values of this enum
     */
    const BUCKET = 'Bucket';
    const CHECK = 'Check';
    const CHECK_DEADMAN = 'CheckDeadman';
    const CHECK_THRESHOLD = 'CheckThreshold';
    const DASHBOARD = 'Dashboard';
    const LABEL = 'Label';
    const NOTIFICATION_ENDPOINT = 'NotificationEndpoint';
    const NOTIFICATION_ENDPOINT_HTTP = 'NotificationEndpointHTTP';
    const NOTIFICATION_ENDPOINT_PAGER_DUTY = 'NotificationEndpointPagerDuty';
    const NOTIFICATION_ENDPOINT_SLACK = 'NotificationEndpointSlack';
    const NOTIFICATION_RULE = 'NotificationRule';
    const TASK = 'Task';
    const TELEGRAF = 'Telegraf';
    const VARIABLE = 'Variable';
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::BUCKET,
            self::CHECK,
            self::CHECK_DEADMAN,
            self::CHECK_THRESHOLD,
            self::DASHBOARD,
            self::LABEL,
            self::NOTIFICATION_ENDPOINT,
            self::NOTIFICATION_ENDPOINT_HTTP,
            self::NOTIFICATION_ENDPOINT_PAGER_DUTY,
            self::NOTIFICATION_ENDPOINT_SLACK,
            self::NOTIFICATION_RULE,
            self::TASK,
            self::TELEGRAF,
            self::VARIABLE,
        ];
    }
}


